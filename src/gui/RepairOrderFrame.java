/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.util.List;
import core.RepairOrder;
import core.Carrier;
import core.Fixes;
import dao.RepairOrderDAO;
import dao.FixesDAO;
import dao.DBConnection;
import dao.CarrierDAO;

// **** //
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
// **** //

/**
 *
 * @author Jesse Houk
 */
public class RepairOrderFrame extends javax.swing.JFrame {
    private DBConnection conn;
    private RepairOrderDAO RODAO;
    private FixesDAO FDAO;
    private CarrierDAO CDAO;
    private List<RepairOrder> repairOrders;
    private List EIDList;
    private List CIDList;
    private List shipTypeList;
    RepairOrderTableModel model;
    /**
     * Creates new form RepairOrderFrame
     */
    public RepairOrderFrame(DBConnection myConn) {
        initComponents();
        
        conn = myConn;
        RODAO = new RepairOrderDAO(conn);
        FDAO = new FixesDAO(conn);
        CDAO = new CarrierDAO(conn);
        
        // enable column sorting on any attribute in the table
        // follows from https://github.com/LegendaryZReborn/4123-DatabaseManagement/blob/master/Donation%20Tracker/src/gui/FundFrame.java
        TableRepairOrders.setAutoCreateRowSorter(true);
        try {
            repairOrders = RODAO.getAllRepairOrders();
            
        }
        catch(Exception ex) {
            Logger.getLogger(RepairOrderFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error setting up table connection: " + ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
        model = new RepairOrderTableModel(repairOrders);
        TableRepairOrders.setModel(model);
        try {
            shipTypeList = RODAO.getAllShipTypes();
//            for(int i = 0; i < shipTypeList.size(); i++)
//                shipTypeComboBox.addItem(shipTypeList.get(i).toString());
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error setting up ship types: " + ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
        try {
            CIDList = CDAO.getAllCIDs();
            for(int i = 0; i < CIDList.size(); i++) {
                shipIn_CIDComboBox.addItem(CIDList.get(i).toString());
                shipOut_CIDComboBox.addItem(CIDList.get(i).toString());
            }
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error setting up shipping CIDs: " + ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
        try {
            EIDList = FDAO.getAllEIDs();
            for(int i = 0; i < EIDList.size(); i++)
                receivingEIDComboBox.addItem(EIDList.get(i).toString());
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error setting up EIDs: " + ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TableRepairOrders = new javax.swing.JTable();
        receivingEIDLabel = new javax.swing.JLabel();
        CIDLabel = new javax.swing.JLabel();
        shipOut_CIDLabel = new javax.swing.JLabel();
        shipOutTypeLabel = new javax.swing.JLabel();
        dateShippedLabel = new javax.swing.JLabel();
        dateRecdLabel = new javax.swing.JLabel();
        SerialNum1Label = new javax.swing.JLabel();
        SerialNum2Label = new javax.swing.JLabel();
        SerialNum3Label = new javax.swing.JLabel();
        SerialNum4Label = new javax.swing.JLabel();
        workingEID1Label = new javax.swing.JLabel();
        workingEID2Label = new javax.swing.JLabel();
        workingEID3Label = new javax.swing.JLabel();
        workingEID4Label = new javax.swing.JLabel();
        dateShippedTextField = new javax.swing.JTextField();
        dateRecdTextField = new javax.swing.JTextField();
        ROAddButton = new javax.swing.JButton();
        ROUpdateButton = new javax.swing.JButton();
        RORemoveButton = new javax.swing.JButton();
        ROResetButton = new javax.swing.JButton();
        receivingEIDComboBox = new javax.swing.JComboBox<>();
        shipIn_CIDComboBox = new javax.swing.JComboBox<>();
        shipOut_CIDComboBox = new javax.swing.JComboBox<>();
        shipTypeComboBox = new javax.swing.JComboBox<>();
        SN1ComboBox = new javax.swing.JComboBox<>();
        SN2ComboBox = new javax.swing.JComboBox<>();
        SN3ComboBox = new javax.swing.JComboBox<>();
        SN4ComboBox = new javax.swing.JComboBox<>();
        workEID1ComboBox = new javax.swing.JComboBox<>();
        workEID2ComboBox = new javax.swing.JComboBox<>();
        workEID3ComboBox = new javax.swing.JComboBox<>();
        workEID4ComboBox = new javax.swing.JComboBox<>();
        SN1FormattedTextField = new javax.swing.JFormattedTextField();
        SN2FormattedTextField = new javax.swing.JFormattedTextField();
        SN3FormattedTextField = new javax.swing.JFormattedTextField();
        SN4FormattedTextField = new javax.swing.JFormattedTextField();
        RIDLabel = new javax.swing.JLabel();
        RIDTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TableRepairOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "RID", "Date Received", "Date Shipped", "Carrier Delivery Type", "Outbound CID", "EID", "Inbound CID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TableRepairOrders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableRepairOrdersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableRepairOrders);

        receivingEIDLabel.setText("EID received by:");

        CIDLabel.setText("CID arrived by:");

        shipOut_CIDLabel.setText("CID sent by:");

        shipOutTypeLabel.setText("Ship type:");

        dateShippedLabel.setText("Date shipped:");

        dateRecdLabel.setText("Date received:");

        SerialNum1Label.setText("Part 1 SN:");

        SerialNum2Label.setText("Part 2 SN:");

        SerialNum3Label.setText("Part 3 SN:");

        SerialNum4Label.setText("Part 4 SN:");

        workingEID1Label.setText("EID 1 repairing:");

        workingEID2Label.setText("EID 2 repairing:");

        workingEID3Label.setText("EID 3 repairing:");

        workingEID4Label.setText("EID 4 repairing:");

        dateShippedTextField.setText("Date Repair Order Shipped");
        dateShippedTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateShippedTextFieldActionPerformed(evt);
            }
        });

        dateRecdTextField.setText("Date Repair Order Received");

        ROAddButton.setText("Add");

        ROUpdateButton.setText("Update");

        RORemoveButton.setText("Remove");

        ROResetButton.setText("Reset");

        receivingEIDComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "empty" }));

        shipIn_CIDComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "empty" }));

        shipOut_CIDComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "empty" }));

        shipTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "empty", "Ground", "Blue", "Brown", "Red" }));

        SN1ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        SN2ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        SN3ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        SN4ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        workEID1ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        workEID2ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        workEID3ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        workEID4ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        SN1FormattedTextField.setText("Part 1 Name");

        SN2FormattedTextField.setText("Part 2 Name");

        SN3FormattedTextField.setText("Part 3 Name");

        SN4FormattedTextField.setText("Part 4 Name");
        SN4FormattedTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SN4FormattedTextFieldActionPerformed(evt);
            }
        });

        RIDLabel.setText("RID:");

        RIDTextField.setText("Order Repair ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 783, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 618, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(shipOut_CIDLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(shipOutTypeLabel)
                            .addComponent(dateShippedLabel)
                            .addComponent(RIDLabel)
                            .addComponent(receivingEIDLabel)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(ROAddButton)
                                        .addComponent(CIDLabel))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(39, 39, 39)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(dateRecdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(RIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(dateShippedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(shipTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(shipOut_CIDComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(receivingEIDComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(shipIn_CIDComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(78, 78, 78)
                                            .addComponent(ROUpdateButton))))
                                .addComponent(dateRecdLabel, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RORemoveButton)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(SerialNum1Label)
                                .addComponent(SerialNum2Label)
                                .addComponent(SerialNum3Label)
                                .addComponent(SerialNum4Label))
                            .addComponent(workingEID1Label)
                            .addComponent(workingEID2Label)
                            .addComponent(workingEID3Label)
                            .addComponent(workingEID4Label))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(ROResetButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(workEID3ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(workEID4ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(workEID2ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(workEID1ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SN4ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SN3ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SN2ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SN1ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SN1FormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SN2FormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SN3FormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SN4FormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RIDLabel)
                    .addComponent(RIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SerialNum1Label)
                    .addComponent(SN1ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SN1FormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SN2ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SN2FormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(SerialNum2Label)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dateRecdLabel)
                        .addComponent(dateRecdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SerialNum3Label)
                    .addComponent(SN3FormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SN3ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dateShippedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dateShippedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SN4ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SN4FormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(SerialNum4Label)
                                .addComponent(shipOutTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(shipOut_CIDLabel)
                            .addComponent(shipOut_CIDComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(workingEID1Label)
                            .addComponent(workEID1ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(receivingEIDLabel)
                            .addComponent(receivingEIDComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(workingEID2Label)
                            .addComponent(workEID2ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(shipTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(shipIn_CIDComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(CIDLabel))
                    .addComponent(workingEID3Label)
                    .addComponent(workEID3ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(workingEID4Label)
                    .addComponent(workEID4ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ROAddButton)
                        .addComponent(ROUpdateButton)
                        .addComponent(RORemoveButton))
                    .addComponent(ROResetButton))
                .addContainerGap(112, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dateShippedTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateShippedTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateShippedTextFieldActionPerformed

    private void SN4FormattedTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SN4FormattedTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SN4FormattedTextFieldActionPerformed

//////    shipTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "GG2220", "RE1410", "WG3100", "WG3720", "WR0103" }));
        
    private void TableRepairOrdersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableRepairOrdersMouseClicked
        // TODO add your handling code here:
        int rowIndex = TableRepairOrders.getSelectedRow();
        int rowModel = TableRepairOrders.convertRowIndexToModel(rowIndex);
        
        RIDTextField.setText(TableRepairOrders.getValueAt(rowIndex, 0).toString());
        dateRecdTextField.setText(TableRepairOrders.getValueAt(rowIndex, 1).toString());
        dateShippedTextField.setText(TableRepairOrders.getValueAt(rowIndex, 2).toString());
        shipTypeComboBox.setSelectedItem(TableRepairOrders.getValueAt(rowIndex, 3).toString());
        if (TableRepairOrders.getValueAt(rowIndex, 4).equals(0)) {
            shipOut_CIDComboBox.setSelectedItem("empty");
        }
        else {
            shipOut_CIDComboBox.setSelectedItem(TableRepairOrders.getValueAt(rowIndex, 4).toString());
        }
        if (TableRepairOrders.getValueAt(rowIndex, 5).equals(0)) {
            receivingEIDComboBox.setSelectedItem("empty");
        }
        else {
            receivingEIDComboBox.setSelectedItem(TableRepairOrders.getValueAt(rowIndex, 5).toString());
        }
        if (TableRepairOrders.getValueAt(rowIndex, 6).equals(0)) {
            shipIn_CIDComboBox.setSelectedItem("empty");
        }
        else {
            shipIn_CIDComboBox.setSelectedItem(TableRepairOrders.getValueAt(rowIndex, 6).toString());
        }
        
        
        
        
        
        ROAddButton.setEnabled(false);
    }//GEN-LAST:event_TableRepairOrdersMouseClicked

    private void reset(){
       RIDTextField.setText("");
       receivingEIDComboBox.setSelectedItem("");
       shipIn_CIDComboBox.setSelectedItem("");
       shipOut_CIDComboBox.setSelectedItem("");
       shipTypeComboBox.setSelectedItem("");
       dateShippedTextField.setText("");
       dateRecdTextField.setText("");
       SN1ComboBox.setSelectedItem("");
       SN1FormattedTextField.setText("");
       SN2ComboBox.setSelectedItem("");
       SN3ComboBox.setSelectedItem("");
       SN4ComboBox.setSelectedItem("");
       workEID1ComboBox.setSelectedItem("");
       workEID2ComboBox.setSelectedItem("");
       workEID3ComboBox.setSelectedItem("");
       workEID4ComboBox.setSelectedItem("");
       SN2FormattedTextField.setText("");
       SN3FormattedTextField.setText("");
       SN4FormattedTextField.setText("");
    }
    
    private void ROResetButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ROResetButtonMouseClicked
        // TODO add your handling code here:
       reset();
    }//GEN-LAST:event_ROResetButtonMouseClicked

    private void ROUpdateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ROUpdateButtonMouseClicked
        // TODO add your handling code here:
   int r =Integer.parseInt(RIDTextField.getText());
   String dr = dateRecdTextField.getText().toString();
   String ds = dateShippedTextField.getText().toString();
   String st = shipTypeComboBox.getSelectedItem().toString();
   int sc = Integer.parseInt(shipOut_CIDComboBox.getSelectedItem().toString());
   int e = Integer.parseInt(receivingEIDComboBox.getSelectedItem().toString());
   int sc2 = Integer.parseInt(shipIn_CIDComboBox.getSelectedItem().toString());
   RepairOrder newOrder = new RepairOrder(r,dr,ds,st,sc,e,sc2);
   try{RODAO.updateRepairOrder(newOrder);}
   catch(Exception ex){
        JOptionPane.showMessageDialog(this, "Error! Unable to update");
   }
   finally{
       JOptionPane.showMessageDialog(this,"Order will be updated");
       reset();
   }
    }//GEN-LAST:event_ROUpdateButtonMouseClicked

    private void RORemoveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RORemoveButtonMouseClicked
        // TODO add your handling code here:
   int r =Integer.parseInt(RIDTextField.getText());
   String dr = dateRecdTextField.getText().toString();
   String ds = dateShippedTextField.getText().toString();
   String st = shipTypeComboBox.getSelectedItem().toString();
   int sc = Integer.parseInt(shipOut_CIDComboBox.getSelectedItem().toString());
   int e = Integer.parseInt(receivingEIDComboBox.getSelectedItem().toString());
   int sc2 = Integer.parseInt(shipIn_CIDComboBox.getSelectedItem().toString());

   RepairOrder newOrder = new RepairOrder(r,dr,ds,st,sc,e,sc2);
   try{RODAO.deleteRepairOrder(newOrder);}
   catch(Exception ex){
       JOptionPane.showMessageDialog(this, "Error! Unable to remove");
   }
   finally{
       JOptionPane.showMessageDialog(this, "Order will be deleted");
       reset();
   }
    }//GEN-LAST:event_RORemoveButtonMouseClicked

    private void ROAddButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ROAddButtonMouseClicked
        // TODO add your handling code here:
   int r = Integer.parseInt(RIDTextField.getText());
   String dr = dateRecdTextField.getText().toString();
   String ds = dateShippedTextField.getText().toString();
   String st = shipTypeComboBox.getSelectedItem().toString();
   int sc = Integer.parseInt(shipOut_CIDComboBox.getSelectedItem().toString());
   int e = Integer.parseInt(receivingEIDComboBox.getSelectedItem().toString());
   int sc2 = Integer.parseInt(shipIn_CIDComboBox.getSelectedItem().toString());

   RepairOrder newOrder = new RepairOrder(r,dr,ds,st,sc,e,sc2);
   try{RODAO.addRepairOrder(newOrder);}
   catch(Exception ex){
       JOptionPane.showMessageDialog(this, "Error, New entry not added!");
   }
   finally{
       JOptionPane.showMessageDialog(this, "Order will be added");
       reset();
   }
    }//GEN-LAST:event_ROAddButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RepairOrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RepairOrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RepairOrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RepairOrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RepairOrderFrame(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CIDLabel;
    private javax.swing.JLabel RIDLabel;
    private javax.swing.JTextField RIDTextField;
    private javax.swing.JButton ROAddButton;
    private javax.swing.JButton RORemoveButton;
    private javax.swing.JButton ROResetButton;
    private javax.swing.JButton ROUpdateButton;
    private javax.swing.JComboBox<String> SN1ComboBox;
    private javax.swing.JFormattedTextField SN1FormattedTextField;
    private javax.swing.JComboBox<String> SN2ComboBox;
    private javax.swing.JFormattedTextField SN2FormattedTextField;
    private javax.swing.JComboBox<String> SN3ComboBox;
    private javax.swing.JFormattedTextField SN3FormattedTextField;
    private javax.swing.JComboBox<String> SN4ComboBox;
    private javax.swing.JFormattedTextField SN4FormattedTextField;
    private javax.swing.JLabel SerialNum1Label;
    private javax.swing.JLabel SerialNum2Label;
    private javax.swing.JLabel SerialNum3Label;
    private javax.swing.JLabel SerialNum4Label;
    private javax.swing.JTable TableRepairOrders;
    private javax.swing.JLabel dateRecdLabel;
    private javax.swing.JTextField dateRecdTextField;
    private javax.swing.JLabel dateShippedLabel;
    private javax.swing.JTextField dateShippedTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> receivingEIDComboBox;
    private javax.swing.JLabel receivingEIDLabel;
    private javax.swing.JComboBox<String> shipIn_CIDComboBox;
    private javax.swing.JLabel shipOutTypeLabel;
    private javax.swing.JComboBox<String> shipOut_CIDComboBox;
    private javax.swing.JLabel shipOut_CIDLabel;
    private javax.swing.JComboBox<String> shipTypeComboBox;
    private javax.swing.JComboBox<String> workEID1ComboBox;
    private javax.swing.JComboBox<String> workEID2ComboBox;
    private javax.swing.JComboBox<String> workEID3ComboBox;
    private javax.swing.JComboBox<String> workEID4ComboBox;
    private javax.swing.JLabel workingEID1Label;
    private javax.swing.JLabel workingEID2Label;
    private javax.swing.JLabel workingEID3Label;
    private javax.swing.JLabel workingEID4Label;
    // End of variables declaration//GEN-END:variables
}
